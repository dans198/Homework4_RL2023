<?xml version="1.0" ?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

	<!-- PUNTO 1A	-->
  <arg name="x_pose" default="-3.0" />
  <arg name="y_pose" default="5.0" />
  <arg name="z_pose" default="0.1" />
  <arg name="yaw" default="-1.57" /> 


  <!--PUNTO 4 
  <arg name="x_pose" default="-13.0" />
  <arg name="y_pose" default="7.0" />
  <arg name="z_pose" default="0.1" />
  <arg name="yaw" default="1.57" /> 
 -->

<env name="GAZEBO_MODEL_PATH" value="$(find rl_racefield)/models:$(optenv GAZEBO_MODEL_PATH)" />

  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rl_racefield)/worlds/rl_race_field.world" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

<!-- urdf xml robot description loaded on the Parameter Server-->  

  <param name="robot_description" command="$(find xacro)/xacro '$(find rl_fra2mo_description)/urdf/fra2mo.xacro'" /> 

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model fra2mo -x $(arg x_pose) -y $(arg y_pose) -z $(arg z_pose) -Y $(arg yaw) -param robot_description"/> 

<!--Static tf publisher for goal1
Goal esempio -->
 <!-- <node pkg="tf" type="static_transform_publisher" name="goal_1_pub" args="-3 5 0 0 0 0 1 map goal1 100" /> -->

<!-- GUI Controls -->
<!--  <node pkg="rqt_robot_steering" type="rqt_robot_steering"  name="Pilot" />  Uncomment if you want to use robot_steering -->

<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

<!-- <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" />   -->

<!-- RVIZ  -->
 <node name="rviz" pkg="rviz" type="rviz" args="-d $(find rl_fra2mo_description)/conf/fra2mo_conf_map.rviz" required="true" /> 

 <!--Static tf publisher for goal1
  PUNTO 2 -->
<node pkg="tf" type="static_transform_publisher" name="goal_1_pub" args="-10 3 0 0 0 0 1 map goal1 100" /> 
<node pkg="tf" type="static_transform_publisher" name="goal_2_pub" args="-15 7 0 0 0 0.2588 0.9659 map goal2 100" /> 
<node pkg="tf" type="static_transform_publisher" name="goal_3_pub" args="-6 8 0 0 0 1 0 map goal3 100" /> 
<node pkg="tf" type="static_transform_publisher" name="goal_4_pub" args="-17.5 3 0 0 0 0.6018 0.7986 map goal4 100" /> 

<!--PUNTO 3A
<node pkg="tf" type="static_transform_publisher" name="goal_3_pub" args="-1 5 0 0 0 0 1 map goal3 100" /> 
<node pkg="tf" type="static_transform_publisher" name="goal_4_pub" args="-9 7 0 0 0 0.2588 0.9659 map goal4 100" /> 
<node pkg="tf" type="static_transform_publisher" name="goal_2_pub" args="-19 6 0 0 0 1 0 map goal2 100" /> 
<node pkg="tf" type="static_transform_publisher" name="goal_1_pub" args="-7 1 0 0 0 0.6018 0.7986 map goal1 100" /> 
-->
</launch>
